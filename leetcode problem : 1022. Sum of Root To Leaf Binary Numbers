1022. Sum of Root To Leaf Binary Numbers

/*
Runtime: 28 ms, faster than 6.11% of C++ online submissions for Sum of Root To Leaf Binary Numbers.
Memory Usage: 24.6 MB, less than 5.02% of C++ online submissions for Sum of Root To Leaf Binary Numbers.
*/

class Solution {
public:
   int final_ans = 0;
    int convert(vector<int> numbers)
    {
        int ans = 0,p=0;
        for(int i=numbers.size()-1;i>=0;i--)
            ans += numbers[i] * pow(2,p++);
        return ans;
    }
    void dfs(TreeNode * r,vector<int> current)
    {
        if(!r) return;
        
        current.push_back(r->val);
     
        dfs(r->left,current);
      
        dfs(r->right,current);
        if((!r->right) and (!r->left))
        final_ans += convert(current);
      
    }
    int sumRootToLeaf(TreeNode* root) {
        
        dfs(root,vector<int>());
       
        return final_ans;
    }
};
