200. Number of Islands

/*
Runtime: 63 ms, faster than 39.36% of C++ online submissions for Number of Islands.
Memory Usage: 12.8 MB, less than 33.06% of C++ online submissions for Number of Islands.
*/

class Solution {
public:
    
    int count = 0;
    int arr[301][301];
   
    void dfs(vector<vector<char>> & grid,int r,int c,bool raised)
    {
        if( r < 0 or c < 0 or r >= grid.size() or c >= grid[0].size()) return;
       if( grid[r][c] == '0') return;
        
        if(arr[r][c] == 100) return;
        arr[r][c] = 100;
        
        if(!raised)
        count++;
         
        grid[r][c] = '0';
        raised = true;
        dfs(grid,r+1,c,raised);
        dfs(grid,r-1,c,raised);
        dfs(grid,r,c-1,raised);
        dfs(grid,r,c+1,raised);
        
        
    }
    int numIslands(vector<vector<char>>& grid) {
       memset(arr,-1,sizeof(arr)); 
        for(int i=0;i<grid.size();i++)
        {
            for(int j=0;j<grid[0].size();j++)
            {
                dfs(grid,i,j,0);
            }
        }
        return count;
    }
};
