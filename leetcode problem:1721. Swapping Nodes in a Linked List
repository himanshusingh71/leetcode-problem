1721. Swapping Nodes in a Linked List

/*
Runtime: 668 ms, faster than 81.65% of C++ online submissions for Swapping Nodes in a Linked List.
Memory Usage: 219.6 MB, less than 5.06% of C++ online submissions for Swapping Nodes in a Linked List.
*/
class Solution {
public:
    ListNode* swapNodes(ListNode* head, int k) {
      if(!head) return NULL;
        if(!(head->next)) return head;
      ListNode *fast ;
        
        int n = 0;
        fast = head;
        while(fast!=NULL)
        {
            
            n+=2;
            
            fast=fast->next->next;
            if(fast==NULL)break;
            if(fast->next==NULL)
            {
                n+=1;
                break;
            }
        }
      ListNode *  temp = head;
        ListNode * first,*second;
        first = second = NULL;
        int c=0;
        while(temp!=NULL)
        {
            c++;
            if(c==k) first = temp;
            if(c==n-k+1) {
                second = temp;
            }
            temp = temp->next;
        }
        if(first!=nullptr and second!=nullptr)
        swap(first->val,second->val);
        return head;
        
   
    }
};
