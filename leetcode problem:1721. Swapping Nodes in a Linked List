1721. Swapping Nodes in a Linked List

/*
Runtime: 668 ms, faster than 81.65% of C++ online submissions for Swapping Nodes in a Linked List.
Memory Usage: 219.6 MB, less than 5.06% of C++ online submissions for Swapping Nodes in a Linked List.
*/

class Solution {
public:
    ListNode* swapNodes(ListNode* head, int k) {
        vector<int> numbers;
        ListNode*temp = head;
        while(temp!=NULL){
            numbers.push_back(temp->val);
            temp = temp->next;
            }
        swap(numbers[k-1],numbers[numbers.size()-k]);
        ListNode *new_head,*temp1;
        new_head = temp1 = temp = nullptr;
        for(int &x: numbers)
        {
            temp = new ListNode(x);
            if(!new_head)
            {
                new_head = temp1 = temp;
            }
            else{
                temp1->next = temp;
                temp1  = temp;
            }
        }
        return new_head;
    }
};
