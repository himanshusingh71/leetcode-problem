1260. Shift 2D Grid

/*
Runtime: 56 ms, faster than 39.32% of C++ online submissions for Shift 2D Grid.
Memory Usage: 14.2 MB, less than 33.62% of C++ online submissions for Shift 2D Grid.
*/

class Solution {
public:
    vector<vector<int>> shiftGrid(vector<vector<int>>& grid, int k) {
        vector<pair<pair<int,int>,int>> col_values;
        int m = grid.size();
        int n = grid[0].size();
       
        while(k--)
        {
         
            col_values.clear();
            for(int i=0;i< m;i++)
            { 
                for(int j=n-1;j>=0;j--)
                { 
                     
                    if( (i == m-1) and ( j == n-1))
                    {
                        
                        col_values.push_back({{0,0},grid[i][j]});
                        cout << grid[i][j] << endl;
                    }
                    else if( j == n-1)
                    {
                        col_values.push_back({{i+1,0},grid[i][j]});
                    }
                     if(j>0)
                    grid[i][j] = grid[i][j-1];
                }
            }
            
            for(int i=0;i<col_values.size();i++)
            {
                int row = col_values[i].first.first;
                int col = col_values[i].first.second;
                int val = col_values[i].second;
                grid[row][col] = val;
            }
         
        }

       return grid;
}
};
    
 
