199. Binary Tree Right Side View

/*
Runtime: 15 ms, faster than 5.32% of C++ online submissions for Binary Tree Right Side View.
Memory Usage: 12.3 MB, less than 9.02% of C++ online submissions for Binary Tree Right Side View.
*/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
        
        if(!root) return {};
        
        queue< TreeNode* > q;
        vector<int> ans;
        q.push(root);
        while(!q.empty())
        {
            int size = q.size();
            vector<int> t;
       
            
            for(int i=0;i<size;i++)
            {
                 TreeNode * temp = q.front();
                q.pop();
                t.push_back(temp->val);
                if(temp->left!=NULL)
                    q.push(temp->left);
                if(temp->right!=NULL)
                    q.push(temp->right);
                
            }
            ans.push_back(t[t.size()-1]);
            t.clear();
        }
        return ans;
    }
};
