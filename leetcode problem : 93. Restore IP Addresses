93. Restore IP Addresses

/*
Runtime: 12 ms, faster than 13.27% of C++ online submissions for Restore IP Addresses.
Memory Usage: 6.4 MB, less than 97.71% of C++ online submissions for Restore IP Addresses.
*/

class Solution {
public:
    bool check(string a,string b,string c,string d,string s)
    {

        // empty strings
        if( a == "" or b == "" or c == "" or d == "") return false;
        // other characters
            for(char &c : s)
            {

                if( c < '0' or c > '9') { 
                          
                    return false;

                }
            }
           // leading zeroes

            if( a[0] == '0') 
            {
                if( (stoll(a,nullptr,10) == 0 )  and count(a.begin(),a.end(),'0') > 1) return false;
            }
             if( b[0] == '0') 
            {
                if( (stoll(b,nullptr,10) == 0 )  and count(b.begin(),b.end(),'0') > 1) return false;
            }

             if( c[0] == '0') 
            {
                if( (stoll(c,nullptr,10) == 0 )  and count(c.begin(),c.end(),'0') > 1) return false;
            }

             if( d[0] == '0') 
            {
                if( (stoll(d,nullptr,10) == 0 )  and count(d.begin(),d.end(),'0') > 1) return false;
            }

            if(a[0] == '0'  and   stoll(a,nullptr,10) !=0  ) return false;


            if(  ( b[0] == '0'  and stoll(b,nullptr,10) !=0 ) ) return false;
            if(c[0] == '0'  and stoll(c,nullptr,10) !=0 ) return false;
              if(d[0] == '0'  and stoll(d,nullptr,10) !=0 ) return false;


            if( stoll(a,nullptr,10) > 255  or stoll(b,nullptr,10) > 255 or stoll(c,nullptr,10) > 255 or stoll(d,nullptr,10) > 255 ) return false;

            return true;

    }


 string str(int a,int b ,string s)
 {
    string ans = "";
    for(int i=a;i<=b;i++)
        ans = ans + s[i];

    return ans;
 }

  vector<string> restoreIpAddresses(string s) {
        vector<string> ans;
        for(int i=0;i<s.length();i++)
        {
            for(int j=i+1;j<s.length();j++)
            {
                for(int z=j+1;z<s.length();z++)
                {
  //cout << str(0,i,s) << "." << str(i+1,j,s) << "." << str(j+1,z,s) << "." << str(z+1,s.length()-1,s) << endl;
                    if(check(str(0,i,s) , str(i+1,j,s) , str(j+1,z,s),str(z+1,s.length()-1,s) , s ))
                    {
                        
    string answer = str(0,i,s) + "." + str(i+1,j,s) + "." + str(j+1,z,s) + "." + str(z+1,s.length()-1,s);
    ans.push_back(answer);
                    }
                }
            }
        }

        return ans;
    }
};
