2331. Evaluate Boolean Binary Tree

/*
Runtime: 19 ms, faster than 71.70% of C++ online submissions for Evaluate Boolean Binary Tree.
Memory Usage: 15 MB, less than 35.50% of C++ online submissions for Evaluate Boolean Binary Tree.
*/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool evaluateTree(TreeNode* root) {
        if(root->left == NULL and root->right == NULL)
            return root->val;
          if( root->val == 2 )
              return evaluateTree(root->left) or evaluateTree(root->right);
        if( root->val == 3 )
              return evaluateTree(root->left) and evaluateTree(root->right);
        return false;
    }
};
