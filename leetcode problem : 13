13. Roman to Integer

/*
Runtime: 7 ms, faster than 88.20% of C++ online submissions for Roman to Integer.
Memory Usage: 6.1 MB, less than 69.39% of C++ online submissions for Roman to Integer.

*/
class Solution {
public:
     int getValue(char c){

 	switch(c)
 	{
 		case 'I':
 		return 1;
 		break;
 		case 'V':
 		return 5;
 		break;
 		case 'X':
 		return 10;
 		break;
 		case 'L':
 		return 50;
 		break;
 		case 'C':
 		return 100;
 		break;
 		case 'D':
 		return 500;
 		break;
 		case 'M':
 		return 1000;
 		break;
 		default:
 		return 0;
 		break;
 	}
 	return 0;
 }
    int romanToInt(string s) {
        
       
  int sum = 0;
  // take out all subtractions 
  for(int i=0;i<s.length()-1;i++)
  {

   if(s[i]=='I'&&s[i+1]=='V')
   {
   	sum += 4;
   	s[i] = '0';
   	s[i+1] = '0';

   }
     else if(s[i]=='I'&&s[i+1]=='X')
   {
   		sum += 9;
   	s[i] = '0';
   	s[i+1] = '0';
   }
   else if(s[i]=='X'&&s[i+1]=='L')
   {
   		sum += 40;
   	s[i] = '0';
   	s[i+1] = '0';
   } 
    else if(s[i]=='X'&&s[i+1]=='C')
   {
   		sum += 90;
   	s[i] = '0';
   	s[i+1] = '0';
   }
     else if(s[i]=='C'&&s[i+1]=='D')
   {
   		sum += 400;
   	s[i] = '0';
   	s[i+1] = '0';
   }
     else if(s[i]=='C'&&s[i+1]=='M')
   {
   		sum += 900;
   	s[i] = '0';
   	s[i+1] = '0';
   }
   
	 
  }
  for(int i=0;i<s.length();i++)
  	sum+= getValue(s[i]);
  return sum;
    }
    
};
