1025. Divisor Game

/*
Runtime: 52 ms, faster than 5.02% of C++ online submissions for Divisor Game.
Memory Usage: 9 MB, less than 7.16% of C++ online submissions for Divisor Game.
*/

class Solution {
public:
   
    bool recur(int n,bool alice,bool &ans,unordered_map<int,bool> &umap)
    {
        if(n==1)
            return !alice;
        
        vector<int> vec;
        
        for(int i=1;i<n;i++)
            if(n%i==0)
                vec.push_back(i);
        
        for(int i=0;i<vec.size();i++)
        {
            if(umap.find(n-vec[i])!=umap.end()) return umap[n-vec[i]];
            bool current ;
          current =   recur(n-vec[i],!alice,ans,umap);
          umap[n-vec[i]] = current; 
           ans = ans or current;

        }
        return ans;
    }
    bool divisorGame(int n) {
        bool alice = true, ans = false;
      unordered_map<int,bool> umap;
           return recur(n,alice,ans,umap);
        
    }
};
