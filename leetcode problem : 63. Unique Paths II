63. Unique Paths II

/*
Runtime: 0 ms, faster than 100.00% of C++ online submissions for Unique Paths II.
Memory Usage: 7.6 MB, less than 88.32% of C++ online submissions for Unique Paths II.
*/

class Solution {
public:
    
    int dp[101][101];
  
    int recur(int r,int c,vector<vector<int>> &obstacleGrid)
    {
       
        if( r >= 0 and c >=0 and obstacleGrid[ r ][ c ] == 1 ) return 0;
                
       if( r == 0 and c == 0 ) return 1;
        
         if(r < 0 or c < 0) return 0;

        if(dp[ r ][ c ] != -1 ) return dp[ r ][ c ];
                    
        int left = 0 , right = 0; 
       
        if( r > 0 )  left =   recur( r - 1 , c , obstacleGrid );
        
        if( c > 0 ) right  =    recur( r , c - 1 , obstacleGrid );
                
        return dp[ r ][ c ] = left + right;
        
    }
    
    int uniquePathsWithObstacles( vector < vector < int > > & obstacleGrid) {
      
        
        memset( dp , -1 , sizeof( dp ));

return recur( obstacleGrid.size() - 1 , obstacleGrid[ 0 ].size() - 1 , obstacleGrid );
       
    }
};
