515. Find Largest Value in Each Tree Row

/*
Runtime: 17 ms, faster than 80.14% of C++ online submissions for Find Largest Value in Each Tree Row.
Memory Usage: 22.2 MB, less than 43.64% of C++ online submissions for Find Largest Value in Each Tree Row.
*/


class Solution {
public:
    vector<int> largestValues(TreeNode* root) {
        if(!root) return {};
        queue<TreeNode*> q;
        q.push(root);
        vector<int> ans;
        
        while(!q.empty())
        {
            int size = q.size();
            int maximum = INT_MIN;
            for(int i=0;i<size;i++)
            {
                TreeNode*temp = q.front();
                maximum = max(maximum,temp->val);
                if(temp->left!=NULL) q.push(temp->left);
                if(temp->right!=NULL) q.push(temp->right);
                q.pop();
                
            }
            ans.push_back(maximum);
        }
        
        return ans;
    }
};
