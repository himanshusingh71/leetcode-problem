103. Binary Tree Zigzag Level Order Traversal

/*
Runtime: 0 ms, faster than 100.00% of C++ online submissions for Binary Tree Zigzag Level Order Traversal.
Memory Usage: 12 MB, less than 92.66% of C++ online submissions for Binary Tree Zigzag Level Order Traversal.
*/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        if(!root) return {};
        queue<TreeNode *> q;
        vector<int> t;
        
        vector<vector<int>> ans;
        q.push(root);
        int size = q.size();
        int l =0;
        while ( size>0){
            vector<int> t;
            l++;
           for(int i = 0; i < size;i++){
               
               TreeNode * N = q.front();
               q.pop();
               t.push_back(N->val);
               if(N->left !=NULL)
                 q.push(N->left);
               if(N->right != NULL)
                   q.push(N->right);
               
           }
            
            size = q.size();
            if( l & 1)
                ans.push_back(t);
            else
            {
                reverse(t.begin(),t.end());
                ans.push_back(t);
            }
        }
        return ans;
        
    }
};
